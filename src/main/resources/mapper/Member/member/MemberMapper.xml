<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zrkj.ecp.dao.member.MemberMapper" >
  <resultMap id="BaseResultMap" type="com.zrkj.ecp.domain.member.Member" >
    <id column="mId" property="mid" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="uname" property="uname" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="loginIP" property="loginip" jdbcType="VARCHAR" />
    <result column="lastLoginTime" property="lastlogintime" jdbcType="TIMESTAMP" />
    <result column="regDate" property="regdate" jdbcType="TIMESTAMP" />
    <result column="notes" property="notes" jdbcType="VARCHAR" />
    <result column="cId" property="cid" jdbcType="INTEGER" />
    <result column="registerDate" property="registerdate" jdbcType="TIMESTAMP" />
    <result column="registerIP" property="registerip" jdbcType="VARCHAR" />
    <result column="leId" property="leid" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    mId, status, uname, password, loginIP, lastLoginTime, regDate, notes, cId, registerDate, 
    registerIP, leId
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_member_member
    where mId = #{mid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_member_member
    where mId = #{mid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.zrkj.ecp.domain.member.Member" >
    insert into t_member_member (mId, status, uname, 
      password, loginIP, lastLoginTime, 
      regDate, notes, cId, 
      registerDate, registerIP, leId
      )
    values (#{mid,jdbcType=INTEGER}, #{status,jdbcType=INTEGER}, #{uname,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{loginip,jdbcType=VARCHAR}, #{lastlogintime,jdbcType=TIMESTAMP}, 
      #{regdate,jdbcType=TIMESTAMP}, #{notes,jdbcType=VARCHAR}, #{cid,jdbcType=INTEGER}, 
      #{registerdate,jdbcType=TIMESTAMP}, #{registerip,jdbcType=VARCHAR}, #{leid,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.zrkj.ecp.domain.member.Member" >
    insert into t_member_member
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="mid != null" >
        mId,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="uname != null" >
        uname,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="loginip != null" >
        loginIP,
      </if>
      <if test="lastlogintime != null" >
        lastLoginTime,
      </if>
      <if test="regdate != null" >
        regDate,
      </if>
      <if test="notes != null" >
        notes,
      </if>
      <if test="cid != null" >
        cId,
      </if>
      <if test="registerdate != null" >
        registerDate,
      </if>
      <if test="registerip != null" >
        registerIP,
      </if>
      <if test="leid != null" >
        leId,
      </if>
      <if test="openid != null" >
        openid
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="mid != null" >
        #{mid,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="uname != null" >
        #{uname,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="loginip != null" >
        #{loginip,jdbcType=VARCHAR},
      </if>
      <if test="lastlogintime != null" >
        #{lastlogintime,jdbcType=TIMESTAMP},
      </if>
      <if test="regdate != null" >
        #{regdate,jdbcType=TIMESTAMP},
      </if>
      <if test="notes != null" >
        #{notes,jdbcType=VARCHAR},
      </if>
      <if test="cid != null" >
        #{cid,jdbcType=INTEGER},
      </if>
      <if test="registerdate != null" >
        #{registerdate,jdbcType=TIMESTAMP},
      </if>
      <if test="registerip != null" >
        #{registerip,jdbcType=VARCHAR},
      </if>
      <if test="leid != null" >
        #{leid,jdbcType=INTEGER},
      </if>
      <if test="openid != null" >
        #{openid,jdbcType=VARCHAR}
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zrkj.ecp.domain.member.Member" >
    update t_member_member
    <set >
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="uname != null" >
        uname = #{uname,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="loginip != null" >
        loginIP = #{loginip,jdbcType=VARCHAR},
      </if>
      <if test="lastlogintime != null" >
        lastLoginTime = #{lastlogintime,jdbcType=TIMESTAMP},
      </if>
      <if test="regdate != null" >
        regDate = #{regdate,jdbcType=TIMESTAMP},
      </if>
      <if test="notes != null" >
        notes = #{notes,jdbcType=VARCHAR},
      </if>
      <if test="cid != null" >
        cId = #{cid,jdbcType=INTEGER},
      </if>
      <if test="registerdate != null" >
        registerDate = #{registerdate,jdbcType=TIMESTAMP},
      </if>
      <if test="registerip != null" >
        registerIP = #{registerip,jdbcType=VARCHAR},
      </if>
      <if test="leid != null" >
        leId = #{leid,jdbcType=INTEGER},
      </if>
      <if test="isdel != null" >
        isdel = #{isdel,jdbcType=INTEGER},
      </if>
    </set>
    where mId = #{mid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zrkj.ecp.domain.member.Member" >
    update t_member_member
    set status = #{status,jdbcType=INTEGER},
      uname = #{uname,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      loginIP = #{loginip,jdbcType=VARCHAR},
      lastLoginTime = #{lastlogintime,jdbcType=TIMESTAMP},
      regDate = #{regdate,jdbcType=TIMESTAMP},
      notes = #{notes,jdbcType=VARCHAR},
      cId = #{cid,jdbcType=INTEGER},
      registerDate = #{registerdate,jdbcType=TIMESTAMP},
      registerIP = #{registerip,jdbcType=VARCHAR},
      leId = #{leid,jdbcType=INTEGER}
    where mId = #{mid,jdbcType=INTEGER}
  </update>

  <!--获取用户列表-->
  <select id="selectMemberList"  resultType="com.zrkj.ecp.domain.member.MemberInfo">
    SELECT
    e.mid AS mid,
    e.uname AS uname,
    e.loginIP AS loginip,
    e.`status` AS STATUS,
    DATE_FORMAT(e.lastLoginTime,'%Y-%c-%d') AS lastlogintime,
    DATE_FORMAT(e.regDate,'%Y-%c-%d') as regdate,
    e.notes as notes,
    e.cId as cid,
    e.registerIP as registerip,
    e.leId as leid,
    t.realName as realname,
    t.sex as sex,
    t.email as email,
    t.mobile as mobile,
    t.telephone as telephone,
    t.address as address,
    t.weixinId as weixinid,
    t.headPic as headpic,
    t.nikeName as nikename,
    t.qq as qq,
    t.xinzuo as xinzuo,
    t.bloodType as bloodtype,
    t.personality as personality
    FROM
    t_member_member e
    LEFT JOIN t_member_member_property t ON e.mId = t.mId
    WHERE
    e.isdel = 0
    <if test="memberDto.cid!=null">
    e.cId = #{memberDto.cid,jdbcType=INTEGER}
    </if>
    <if test="memberDto.uname!=null">
    AND e.uname like #{memberDto.uname,jdbcType=VARCHAR}
    </if>
    LIMIT #{memberDto.page,jdbcType=INTEGER},#{memberDto.rows,jdbcType=INTEGER}
  </select>

  <select id="selectequipmentList" resultType="com.zrkj.ecp.dto.member.EquipmentDto">
    SELECT
	ma.telephone AS id,
	ma.telephone AS text,
	ma.mId AS memberid,
	ma.realName AS  membername,
	ma.address AS  memberaddress
FROM
	t_member_member_property ma
WHERE
	ma.telephone like #{q,jdbcType=INTEGER}
	AND isdel = 0
  </select>

  <select id="selectNameAndAdressByPhone" resultType="com.zrkj.ecp.dto.member.MemberBasDeatilDto">
       SELECT
	mp.name AS membername,
	mp.address AS memberaddress
FROM
	t_member_member_address mp
WHERE
	mp.phone like #{phone,jdbcType=INTEGER}
	AND isdel = 0
  </select>

  <!--获取总记录数-->
  <select id="selectMemberCount" parameterType="com.zrkj.ecp.dto.member.MemberDto" resultType="java.lang.Integer">
    SELECT
    count(e.mId)
    FROM
    t_member_member e
    LEFT JOIN t_member_member_property t ON e.mId = t.mId
    WHERE
    e.isdel = 0
    <if test="cid!=null">
      e.cId = 1
    </if>
    <if test="uname!=null">
      AND e.uname = #{uname,jdbcType=VARCHAR}
    </if>
  </select>

  <!--修改密码-->
  <update id="updateMemberPassWord"  >
    UPDATE t_member_member e
    SET e.`password` = #{newPassword,jdbcType=VARCHAR}
    WHERE
        e.uname = #{uname,jdbcType=VARCHAR}
  </update>

  <!--登录验证  -->
  <select id = "loginCheck" resultType="java.lang.Integer" parameterType="com.zrkj.ecp.domain.member.Member">
    SELECT
    e.mId
    FROM
    t_member_member e
    WHERE
    e.uname = #{uname,jdbcType=VARCHAR}
    AND e.`password` = #{password,jdbcType=VARCHAR}
  </select>

  <select id="checkMemberExists" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select
    e.mId ,e.cId,e.notes
    from t_member_member e
    where     e.uname = #{uname,jdbcType=VARCHAR}

  </select>

  <!--查找最大id-->
  <select id="selectMaxAid" resultType="java.lang.Integer">
    select max(e.mId) from t_member_member e ;
  </select>
  
  <update id="updateOpenIdByPhone">
    UPDATE t_member_member
    SET openid = #{openid,jdbcType=VARCHAR}
    WHERE uname = #{uname,jdbcType=VARCHAR}
  </update>

  <update id="updatePhoneByOpenId">
    UPDATE t_member_member
    SET uname = #{uname,jdbcType=VARCHAR}
    WHERE openid = #{openid,jdbcType=VARCHAR}
  </update>
</mapper>